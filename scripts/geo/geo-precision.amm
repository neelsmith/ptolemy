// 1. Add maven repository where we can find our libraries
val myBT = coursierapi.MavenRepository.of("https://dl.bintray.com/neelsmith/maven")
interp.repositories() ++= Seq(myBT)

// 2. Make libraries available with `$ivy` imports:
import $ivy.`edu.holycross.shot::ptolemy:1.2.1`

import scala.xml._

val url = "https://raw.githubusercontent.com/neelsmith/ptolemy/master/tei/tlg0363.tlg009.epist03-p5-u8.xml"
val root = XML.load(url)

import edu.holycross.shot.ptolemy._

val delimited = TeiParser.parseTEI(root, false)
val ptolStrings = delimited.map(ln => PtolemyString(ln)).filter(_.id.nonEmpty)


val lonPrecision = ptolStrings.groupBy( pt => pt.lonFract).toVector.sortBy(_._1).map{ case (k,v) => (k,v.size)}
val latPrecision = ptolStrings.groupBy( pt => pt.latFract).toVector.sortBy(_._1).map{ case (k,v) => (k,v.size)}

// Make plotly libraries available to this notebook:
import $ivy.`org.plotly-scala::plotly-almond:0.7.1`

// Import plotly libraries, and set display defaults suggested for use in Jupyter NBs:
import plotly._, plotly.element._, plotly.layout._, plotly.Almond._
repl.pprinter() = repl.pprinter().copy(defaultHeight = 3)

val fractionLabels = 
Map ("0.0" -> "0", 
     "0.083" -> "1/12", 
     "0.167" -> "1/6", 
     "0.25" -> "1/4", 
     "0.333" -> "1/3", 
     "0.417" -> "5/12", 
     "0.5" -> "1/2", 
     "0.583" -> "7/12", 
     "0.667" -> "2/3", 
     "0.75" -> "3/4", 
     "0.833" -> "5/6", 
     "0.917" -> "11/12")


val lonValues = lonPrecision.map(freq => fractionLabels(freq._1))
val lonCounts = lonPrecision.map(freq => freq._2)

val lonFreqs = Vector(
  Bar(x = lonValues, y = lonCounts)
)
plot(lonFreqs)

val latValues = latPrecision.map(freq => freq._1)
val latCounts = latPrecision.map(freq => freq._2)

val latFreqs = Vector(
  Bar(x = latValues, y = latCounts)
)
plot(latFreqs)

